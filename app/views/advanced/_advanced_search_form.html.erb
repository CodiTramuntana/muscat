 <%# Overriden to remove the Facets -%>
 
         <script src="/javascripts/verovio-toolkit.js" type="text/javascript" ></script>
 
  <% unless (search_context_str = render_search_to_s( advanced_search_context)).blank? %>
    <div class="constraints well search_history">
      <h4><%= t 'blacklight_advanced_search.form.search_context' %></h4>
      <%= search_context_str %>
    </div>
  <% end %>

<div>
<h4>Incipit Search</h4><p>
  
  	Query type:
  <select id="incipit_type">
    <option value="PCH">Exact match</option>
    <option value="PGC">Fuzzy match</option>
  </select>
  <p>
  <button type="button" class="btn btn-default btn-sm" onclick="javascript:onundo()">
    <span class="glyphicon glyphicon-erase"></span>
  </button>
  Erase one note
	<p>
	<%= render "advanced/advanced_piano" %>	
</p>

	<div id="render_01"></div>

</div>

<p>
<%= form_tag catalog_index_path, onsubmit: "prepare_incipit();", :class => 'advanced form-horizontal', :method => :get do  %>

  <%= render_hash_as_hidden_fields(params_for_search(advanced_search_context, {})) %>

  <div class="input-criteria">

      <div class="query-criteria">
        <h4 class="query-criteria-heading">
          <%= t('blacklight_advanced_search.form.query_criteria_heading_html', :select_menu =>  select_menu_for_field_operator ) %> 
        </h4>

        <div id="advanced_search">
          <%= render 'advanced/advanced_search_fields' %>
        </div>
      </div>
      
     
  </div>

  <hr>

  <div class="sort-submit-buttons clearfix">
    <%= render 'advanced_search_submit_btns' %>
  </div>

<% end %>

<script>
	var vrvToolkit = new verovio.toolkit();
  var current_oct = -1;
  var undos = new Array();
 
	function prepare_incipit() {
		var search_type = $("#incipit_type").val();
		$('#pae').val($('#pae').val() + "-" + search_type + "*" );
	}
		
  // keyup event for updating when the text input is modified
  $('#pae').keyup(function(event){
      update_display();
  });
	
  // keydown events for shortcuts to the buttons - only when #kb_focus (empty) has focus (hacky)
  $('#kb_focus').keypress(function(event) {
     if ((event.charCode == 85) || (event.charCode == 117)) { onundo(); }
  });
	
  function onundo( )
  {
      undo_str = undos.pop()
      $('#pae').val( undo_str );
      update_display();
      
  }
	
  function onpitch(pitch, oct, alteration, midi)
  {
      pitch_str = '';
      
      if (oct != current_oct) {
        switch (oct) {
           case 3:
           pitch_str += '\'';
           case 2:
           pitch_str += '\'';
           case 1:
           pitch_str += '\'';
        }
      }
      current_oct = oct;
      
      pitch_str += pitch;
			undos.push( $('#pae').val() );
      $('#pae').val($('#pae').val() + pitch_str );
      update_display();
  }
	
  function update_display()
  {
      pe_incipit('', 
                      "clef_01",
                      "key_01",
                      "timesig_01",
                      "pae",
                      "render_01");
  }
	
  function render_music( music, format )
  {    
      // The trailing newline is needed so we can read the file lines
      // correctly if the file does not end with a newline
      var svg = vrvToolkit.renderData(music + "\n", {inputFormat: 'pae', scale: 50, adjustPageHeight: 1, pageWidth: 1048, border: 0, spacingStaff: 2});
      document.getElementById('render_01').innerHTML = svg;
  };

  function pe_incipit(destination_column, clef, keysig, timesig, incipit, target)
  {
		jquery_incipit = incipit.replace(/(\[|\])/g, '\\$1');
      pae_clef = "G-2"
      pae_keysig =  "";
      pae_timesig = "c";
      pae_incipit = $('#' + jquery_incipit).val();


      pae = "@start:pae-file\n";
      pae = pae + "@clef:" + pae_clef + "\n";
      pae = pae + "@keysig:" + pae_keysig + "\n";
      pae = pae + "@key:\n";
      pae = pae + "@timesig:" + pae_timesig + "\n";
      pae = pae + "@data: " + pae_incipit + "\n";
      pae = pae + "@end:pae-file\n"
      render_music(pae, 'pae');
  
  }
	
  $( document ).ready(function() {
  
     if ($("#pae").val()) {
       val = $("#pae").val();
       val = val.replace("-PCH*", "");
       val = val.replace("-PGC*", "");
       $("#pae").val(val);
       update_display();
     }

  });
  
</script>