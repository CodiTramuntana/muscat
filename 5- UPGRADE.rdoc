= Upgrade from version 2.0

The data using the 2.0 database layout can be converted with the script:

 housekeeping/upgrade_3.0/001_update_tables.rb
 
which takes care of all the data upgrading necessary, renames all the tables to the new layout, generates the new ones and updates the data. After the script is run, the index should be recreated:

 bundle exec rake sunspot:solr:reindex

== Code

Changes in the models:

* Source model is now Source

= Upgrade from version 1.0

This section describes how to upgrade an existing 1.0 version to 2.0.

NOTE: This guide assumes that Muscat 1.0 is updated to the latest SVN revision and all databases updated to the lstest schema form 1.0.

== Code

No update path is possible using SVN. A new checkout is needed and the customizations in environment.rb should be copied over to application.rb. In the databases.yml the adapter needs to be mysql2.

== Libraries

One modification in version 2.0 is the change from a one-to-many to a many-to-many structure for libraries. This better accommodates prints and records with multiple copies.

For upgrading the content, the option RISM::MIGRATE_LIBRARIES in config/application.rb has to be set to true.

Then run:
	
	rails runner ./housekeeping/upgrade_2.0/001_create_libraries_manuscripts.rb
	
== External IDs instead of UUIDs

Another modifications in version 2.0 is the use of external IDs (numerical) instead of the UUIDs. External IDs offer more flexibility, including the option to change them when necessary.

In version 2.0, the rism_id in the Source class was also changed to an external ID (ext_id) for consistency, which greatly simplifies the use of CW.

Another addition of version 2.0 is a Source parent <-> child database link through a manuscript_id field in the Source class.

Before performing the upgrade, it is necessary to check that no duplicates exists in the database (it should not be the base but this happened). They can be found by running:

	$ mysql -u <user> -p <database>
	-> SELECT *, COUNT(*) AS c FROM manuscripts GROUP BY rism_id HAVING c > 1;

This check is performed also in 002_migrate_ext_id.rb and it will stop if duplicates are found

In order to upgrade to version 2.0, the steps are:

* Upgrade the database structure (add ext_id columns)
* Upgrade the data (update the manuscript source)
* Finalize the migration (drop un-used columns)
* Migrate the editor profiles

=== Upgrade the database structure

Run:

	rails runner ./housekeeping/upgrade_2.0/002_migrate_ext_id.rb
	
If necessary, this can be undone by:

	rails runner ./housekeeping/upgrade_2.0/002_migrate_ext_id.rb down
	
=== Upgrade the data

Run:

	rails runner ./housekeeping/upgrade_2.0/003_update_data.rb
	
This script upgrades only 10,000 records. It can take two parameters, an offset and an number of records to upgrade.

Things to check after the upgrade:
	
* Records that were not converted (by looking at the 'updated_at' value)
* Records (manuscripts and foreign table entries) with a NULL uuid value.

It is possible (even quite unlikely) to have in version 1.0 manuscripts with a Marc source containing invalid UUIDs. The missing entries will be inserted in the foreign tables with a NULL UUID value. The links will not be created for these entries.

It is also possible to have collection items pointing through a 773 Marc field to an existing record. In that case, the record will be created in the upgrade with also a NULL UUID.

It is easier to check this before the next step because the UUID field will then be deleted.
	
=== Finalize the migration

Run:

	rails runner ./housekeeping/upgrade_2.0/004_finalize.rb 


=== Migrate the editor profiles

In version 2.0, editor profiles and editor configuration are no longer stored in the database but as file.

In order to migrate the editor profiles, it is necessary to set the profile name (directory) in the config/application.rb file under RISM::EDITOR_PROFILE.

Run:

	rails runner ./housekeeping/upgrade_2.0/005_migrate_profiles.rb